# Makefile.in generated by automake 1.9.6 from Makefile.am.
# regression/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# $URL: dd $
# $Revision: 19 $

# $URL: dd $
# $Revision: 19 $

# $URL: dd $
# $Revision: 19 $
srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/ldta2011
pkglibdir = $(libdir)/ldta2011
pkgincludedir = $(includedir)/ldta2011
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/m4/Makefile.am.rules \
	$(top_srcdir)/m4/Makefile.am.targets \
	$(top_srcdir)/m4/Makefile.am.vars
subdir = regression
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
CONFIG_CLEAN_FILES =
SOURCES =
DIST_SOURCES =
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/db/develop/Oberon/config/missing --run aclocal-1.9
AMTAR = ${SHELL} /home/db/develop/Oberon/config/missing --run tar
AUTOCONF = ${SHELL} /home/db/develop/Oberon/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/db/develop/Oberon/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/db/develop/Oberon/config/missing --run automake-1.9
AWK = mawk
BFLAGS = $(AM_BFLAGS)
CAMLP4 = camlp4
CAMLP4LIB = /usr/lib/ocaml/camlp4
CAMLP4O = camlp4o
CAMLP4OF = 
CAMLP4R = camlp4r
CAMLP4RF = 
CAMLP4_FALSE = #
CAMLP4_TRUE = 
CAMLP5 = camlp5
CAMLP5LIB = /usr/lib/ocaml/camlp5
CAMLP5O = camlp5o
CAMLP5R = camlp5r
CAMLP5_FALSE = #
CAMLP5_TRUE = 
CFLAGS = 
CYGPATH_W = echo
DEBUG = 
DEFS = -DPACKAGE_NAME=\"\" -DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE_URL=\"\"
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EXEEXT = 
EXTRA_CMA =  str.cma typeutil.cma settings.cma checked.cma GT.cma ostap.cmo $(PACKAGE).cma
HAVE_OCAMLFIND_FALSE = #
HAVE_OCAMLFIND_TRUE = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LIBOBJS = 
LIBS = 
LOG = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/db/develop/Oberon/config/missing --run makeinfo
META = /usr/local/lib/ocaml/4.01.0/ostap/META
MINGW32_FALSE = 
MINGW32_TRUE = #
MODULE_INCLUDES =  -I /usr/local/lib/ocaml/4.01.0/typeutil -I /usr/local/lib/ocaml/4.01.0/settings -I /usr/local/lib/ocaml/4.01.0/checked -I /usr/local/lib/ocaml/4.01.0/GT -I /usr/local/lib/ocaml/4.01.0/ostap -I $(top_srcdir)/src -I \
	$(CAMLP5LIB)
OCAMLC = ocamlc.opt
OCAMLDEP = ocamldep
OCAMLDOC = ocamldoc
OCAMLDSORT = echo
OCAMLFIND = ocamlfind
OCAMLLEX = ocamllex.opt
OCAMLLIB = /usr/lib/ocaml
OCAMLMKLIB = ocamlmklib
OCAMLMKTOP = ocamlmktop
OCAMLOPT = ocamlopt.opt
OCAMLVERSION = 4.01.0
OCAMLYACC = ocamlyacc
OFLAGS = $(AM_OFLAGS)
P4FLAGS = $(AM_P4FLAGS)
P5FLAGS = $(AM_P5FLAGS)
PACKAGE = ldta2011
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_URL = 
PACKAGE_VERSION = 
PARSER_INCLUDES = 
PATH_SEPARATOR = :
SET_MAKE = 
SHELL = /bin/bash
SITELIBDIR = 
STRIP = 
VERSION = 
ac_aux_dir = config
am__leading_dot = .
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
have_camlp4 = yes
have_camlp4o = yes
have_camlp4of = no
have_camlp4r = yes
have_camlp4rf = no
have_camlp5 = yes
have_camlp5o = yes
have_camlp5r = yes
have_ocamlc = yes
have_ocamlcc = yes
have_ocamlcdotopt = yes
have_ocamldep = yes
have_ocamldoc = yes
have_ocamldsort = 
have_ocamlfind = yes
have_ocamllex = yes
have_ocamllexdotopt = yes
have_ocamlmklib = yes
have_ocamlmktop = yes
have_ocamlopt = yes
have_ocamloptdotopt = yes
have_ocamlyacc = yes
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /home/db/develop/Oberon/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
TESTS = test
TESTS_ENVIRONMENT = EXEEXT=$(EXEEXT) $(srcdir)/test.sh

# define macros that creates directiries
mkinstalldirs = $(INSTALL_SCRIPT) -d
MKTEMP = mktemp

# define macros that creates temporary files
#MKTEMP = $(top_srcdir)/config/mktemp.sh

# sort sources before use
# (sorting is required for correct link order)
SORTED := $(shell $(OCAMLDSORT) $(SOURCES))

# CMO - all compiled objects
CMO := $(SOURCES:.ml=.cmo)

# all compiled interfaces
CMI := $(CMO:.cmo=.cmi)
# all compiled native objects (OCaml' runtime)
CMX := $(CMO:.cmo=.cmx)
# all compiled native objects (separated)
OBJ := $(CMO:.cmo=.o)

# compiled library
CMA := $(addsuffix .cma, $(PACKAGE))
# compiled native library (OCaml' runtime)
CMXA := $(addsuffix .cmxa, $(PACKAGE))
# compiled native library (separated)
LIB := $(addsuffix .a, $(PACKAGE))
# executable bytecode
BYTE := $(addsuffix .byte$(EXEEXT), $(PACKAGE))
# executable native bytecode
NATIVE := $(addsuffix .opt$(EXEEXT), $(PACKAGE))
# packed CMO, add to TARGET
CMOPK := $(addsuffix .cmo, undefined)
# packed CMX, add to TARGET
CMXPK := $(addsuffix .cmx, undefined)
# interface for packed object
CMIPK := $(addsuffix .cmi, undefined)
# object for linking
OPK := $(addsuffix .o, undefined)

# extra compiled native libraries used for native linking
tmp = $(EXTRA_CMA:.cma=.cmxa)
EXTRA_CMXA = $(tmp:.cmo=.cmx)

# sources for .cma linking
CMO4CMA = $(CMO)
# sources for .cmxa linking
CMX4CMXA = $(CMO4CMA:.cmo=.cmx)
DOCFILES = $(PACKAGE).ps $(PACKAGE).html
TARGET = 

# OCaml parser called with flags
AM_P4FLAGS = -pp "$(CAMLP4OF) $(PARSER_INCLUDES)"

# OCaml parser call with flags
AM_P5FLAGS := -pp "$(CAMLP5O) $(PARSER_INCLUDES) pa_log.cmo $(LOG)"

# OCaml documentator called with flags
AM_DOCFLAGS = -html

# overwrite some variables
PXFLAGS = $(P5FLAGS)
CAMLPXLIB = $(CAMLP5LIB)

# bytecode compiling flags
AM_BFLAGS = $(MODULE_INCLUDES) $(DEBUG)
# native (optimized) compiling flags
AM_OFLAGS = $(MODULE_INCLUDES)

# extra .cmi to delete those are generated from .ml
CLEAN_CMI := $(CMO:.cmo=.cmi)
# other extra files to clean up
CLEAN_EXTRA := .depend $(addsuffix .cmi, $(TESTS)) $(addsuffix .cmo, \
	$(TESTS)) $(addsuffix $(EXEEXT), $(TESTS)) *.diff *.log
all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/m4/Makefile.am.vars $(top_srcdir)/m4/Makefile.am.targets $(top_srcdir)/m4/Makefile.am.rules $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  regression/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  regression/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
uninstall-info-am:
tags: TAGS
TAGS:

ctags: CTAGS
CTAGS:


check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/../m4
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
clean: clean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

.PHONY: all all-am check check-TESTS check-am clean clean-generic \
	distclean distclean-generic distdir dvi dvi-am html html-am \
	info info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-generic pdf pdf-am ps ps-am uninstall \
	uninstall-am uninstall-info-am


# default build:
# - update timestamp
# - build default target
# - build bytecode and optimized native code
all-am: $(TARGET)

# default clean
clean-am:
	rm -fR $(CMA) $(CMXA) $(CMOPK) $(CMXPK) $(CMIPK) $(OPK) $(CMO) $(CMI) $(CLEAN_CMI) $(CMX) $(OBJ) $(LIB) META $(CLEAN_EXTRA)

# manual install
install-data-am: $(TARGET)
	$(mkinstalldirs) $(CAMLPXLIB); \
	for i in $(TARGET); do \
	    $(INSTALL_DATA) $$i $(CAMLPXLIB)/$$i; \
	done

# manual uninstall
uninstall-am:
	for i in $(TARGET); do \
	    rm -f $(CAMLPXLIB)/$$i; \
	done

# cleanup autogenerated scripts in maintainer-clean mode
maintainer-clean-generic:
	rm -rf $(top_srcdir)/autom4te.cache $(CLEAN_EXTRA)

# what is byte-code target
.PHONY: byte-code bc
byte-code: $(BYTE)

# how to build bytecode target
$(BYTE): $(CMO)
	$(OCAMLC) $(BFLAGS) -o $@ $(EXTRA_CMA) $(CMO)

# what is native-code target
.PHONY: native-code nc
native-code: $(NATIVE)

# how to build native code target
$(NATIVE): $(CMX)
	$(OCAMLOPT) $(OFLAGS) $(STATIC) -o $@ $(EXTRA_CMXA) $(CMX)

# shorter acronims
bc: byte-code
nc: native-code

# how to build library
$(CMA): $(CMO4CMA)
	$(OCAMLC) -a -o $@ $(CMO4CMA)

# how to build native optimized library
$(CMXA): $(CMX4CMXA)
	$(OCAMLOPT) -a -o $@ $(CMX4CMXA)

# how to build packed CMO
$(CMOPK): $(CMO)
	$(OCAMLC) -o $@ -pack $(if $(findstring rectypes,$(BFLAGS)),-rectypes,) $^

# how to build packed CMX
$(CMXPK): $(CMX)
	$(OCAMLOPT) -o $@ -pack  $(if $(findstring rectypes,$(OFLAGS)),-rectypes,) $^

# META description for package
META: $(top_srcdir)/VERSION
	@echo "Generating META description"; \
	revision=`grep "\\$$Revision:" $< | sed -e 's,^\\$$,,' -e 's, \\$$$$,,'`; \
	date=`LC_TIME=C date`; \
	echo "version = \"$$revision\"" > $@; \
	echo "description = \"$(DESCRIPTION)\"" >> $@; \
	echo "requires = \"\"" >> $@; \
	echo "archive(byte) = \"$(PACKAGE).cma\"" >> $@; \
	echo "archive(native) = \"$(PACKAGE).cmxa\"" >> $@

# save compiled revision into module
version.ml: $(top_srcdir)/VERSION
	@echo "Generating version.ml"; \
	revision=`grep "\\$$Revision:" $< | sed -e 's,^\\$$,,' -e 's, \\$$$$,,'`; \
	date=`LC_TIME=C date`; \
	echo "let version = \"$$revision\"" > $@; \
	echo "let date = \"$$date\"" >> $@

# resolve compiling dependencies
.depend: $(SOURCES)
	ocamldep $(PXFLAGS) $(SOURCES) $(MLI) > .depend

doc:	
	ocamldoc $(MODULE_INCLUDES) $(AM_DOCFLAGS) $(PXFLAGS) -d $(top_srcdir)/doc/html/$(PACKAGE) *.mli

# Rules to build tests
test: test.ml
	$(OCAMLC) $(BFLAGS) $(EXTRA_CMA) $(PXFLAGS) -o $@$(EXEEXT) $<

-include .depend

# generic rules
###############
%.cmi: %.mli
	$(OCAMLC) -c $(BFLAGS) $(PXFLAGS) $<

# Note: cmi <- mli should go first
%.cmi: %.ml
	$(OCAMLC) -c $(BFLAGS) $(PXFLAGS) $<

%.cmo: %.ml
	$(OCAMLC) -c $(BFLAGS) $(PXFLAGS) $<

%.o: %.ml
	$(OCAMLOPT) -c $(OFLAGS) $(STATIC) $(PXFLAGS) $<

%.cmx: %.ml
	$(OCAMLOPT) -c $(OFLAGS) $(STATIC) $(PXFLAGS) $<

%.ml: %.mll
	$(OCAMLLEX) $<

%.ml: %.mly
	$(OCAMLYACC) -v $<

%.mli: %.mly
	$(OCAMLYACC) -v $<
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
